{"name": "test_item_use[500-50-0-50-50-2-301-SUCCESS-except_msg7]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'HEALTH_IS_NOT_0' == 'SUCCESS'\n  - HEALTH_IS_NOT_0\n  + SUCCESS", "trace": "self = <testcases.pet_api_test.test_06_item.TestItem object at 0x000001E28D673490>\npet_login_hasrole_fixture = {'code': 'SUCCESS', 'data': {'role_created': True, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njc1MjY1...hjNmMtNGYzYi1hMDMxLTU0NDYwNDRlYzE1MSIsImFpZCI6MSwiZXhjbHVzaXZlIjp0cnVlfQ.XkDLE60j1HMR1K6so5R7kRsQ9GfDI71p328CwsSL_pY'}}\ngold = 500, hunger = 50, heath = 0, clean = 50, mood = 50, Class = 2, ID = 301\nexcept_code = 'SUCCESS', except_msg = {}\n\n    @allure.story(\"用例--使用物品\")\n    @allure.description(\"该用例是使用物品的测试\")\n    @pytest.mark.single\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"gold,hunger,heath,clean,mood,Class, ID, except_code, except_msg\",\n                             pet_data_register[\"test_item_use\"])\n    def test_item_use(self, pet_login_hasrole_fixture, gold, hunger, heath, clean, mood, Class, ID, except_code,\n                      except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        pet_info = pet_login_hasrole_fixture\n        token = pet_info[\"data\"][\"token\"]\n        step_item_use(gold, hunger, heath, clean, mood, Class, ID)\n        gm = GM(token)\n        gm.gm_gold(gold)\n        gm.gm_mood(mood)\n        gm.gm_clean(clean)\n        gm.gm_heath(heath)\n        gm.gm_hunger(hunger)\n        result = item_use(token, Class, ID)\n        # print(result.__dict__)\n        assert result.response.status_code == 200\n        # assert result.success == except_code, result.error\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：{}\".format(except_code, result.response.json().get(\"code\")))\n>       assert result.response.json().get(\"code\") == except_code\nE       AssertionError: assert 'HEALTH_IS_NOT_0' == 'SUCCESS'\nE         - HEALTH_IS_NOT_0\nE         + SUCCESS\n\ntest_06_item.py:69: AssertionError"}, "description": "该用例是使用物品的测试", "steps": [{"name": "前置步骤 ==>> 设置数据", "status": "passed", "parameters": [{"name": "gold", "value": "500"}, {"name": "hunger", "value": "50"}, {"name": "heath", "value": "0"}, {"name": "clean", "value": "50"}, {"name": "mood", "value": "50"}, {"name": "Class", "value": "2"}, {"name": "ID", "value": "301"}], "start": 1666921822124, "stop": 1666921822124}], "attachments": [{"name": "log", "source": "ce89c5d5-7198-4520-9ec3-dd934b44bee5-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ff290e41-4852-4773-a2f9-748bd88acdaf-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "gold", "value": "500"}, {"name": "hunger", "value": "50"}, {"name": "heath", "value": "0"}, {"name": "clean", "value": "50"}, {"name": "mood", "value": "50"}, {"name": "Class", "value": "2"}, {"name": "ID", "value": "301"}, {"name": "except_code", "value": "'SUCCESS'"}, {"name": "except_msg", "value": "{}"}], "start": 1666921822123, "stop": 1666921822303, "uuid": "060a003f-4c68-40e5-a700-e8be4eb2ae6c", "historyId": "2e015029859a445f6308204c7fe1d451", "testCaseId": "630e494eca10d08e9ce13d9e1e009ca7", "fullName": "testcases.pet_api_test.test_06_item.TestItem#test_item_use", "labels": [{"name": "feature", "value": "物品模块"}, {"name": "story", "value": "用例--使用物品"}, {"name": "severity", "value": "trivial"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.pet_api_test"}, {"name": "suite", "value": "test_06_item"}, {"name": "subSuite", "value": "TestItem"}, {"name": "host", "value": "cy"}, {"name": "thread", "value": "10880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.pet_api_test.test_06_item"}]}
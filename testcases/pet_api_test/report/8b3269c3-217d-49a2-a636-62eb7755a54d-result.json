{"name": "test_weight_data[0-100-100-100]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 432\n  -500\n  +432", "trace": "self = <testcases.pet_api_test.test_11_data.TestData object at 0x000001E956941760>\npet_login_hasrole_fixture = {'code': 'SUCCESS', 'data': {'role_created': True, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjkzNDM3...2ZSI6dHJ1ZSwiaXNfY3JlYXRlX3BldCI6dHJ1ZX0.1D8eS4JCMK8t97-ADTUOzDHE4JN2w64u6yCV1Xjr-io', 'widget_install_rewards': True}}\nhunger = 0, mood = 100, health = 100, interval_time = 540\n\n    @allure.story(\"用例--体重数值测试\")\n    @allure.description(\"该用例是体重数值的测试\")\n    @pytest.mark.single\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"hunger,mood,health,interval_time\", pet_data[\"test_weight_data\"])\n    def test_weight_data(self, pet_login_hasrole_fixture, hunger, mood, health, interval_time):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        pet_info = pet_login_hasrole_fixture\n        token = pet_info[\"data\"][\"token\"]\n        re = update(token)\n        items = re.response.json().get(\"data\").get(\"items\")\n        current_weight = 0\n        max_weight = 0\n        for i in items:\n            if i.get(\"item_id\") == 116:\n                max_weight = i.get(\"number\")\n                current_weight = max_weight  # 重置当前体重\n                break\n        if interval_time == 100:\n            interval_time = current_weight  # 设置该项主要是用于衰减值大于衰减上限时的测试\n        gm = GM(token)\n        gm.gm_weight(max_weight)\n        gm.gm_hunger(hunger)\n        gm.gm_mood(mood)\n        gm.gm_heath(health)\n        gm.moditem_list()\n        now_timestamp = redis_db.get_weight_timestamp(account_id)\n        weight_up = get_pet_config.get_WeightUp()[\"value\"]\n        weight_up_time = get_pet_config.get_WeightUp()[\"time\"]\n        weight_down = get_pet_config.get_WeightDown()[\"value\"]\n        weight_down_time = get_pet_config.get_WeightDown()[\"time\"]\n        except_data = 0\n        set_timestamp = 0\n        if health == 0:\n            except_data = current_weight\n            set_timestamp = now_timestamp - interval_time * weight_up_time\n        elif hunger == 0:\n            except_data = current_weight - weight_down * interval_time\n            logger.info(\"每单位时间减少：{}点\".format(weight_down))\n            if except_data < max_weight * (100 - get_pet_config.get_WeightDownLimit()[\"max_reduce\"]) / 100:\n                except_data = max_weight * (100 - get_pet_config.get_WeightDownLimit()[\"max_reduce\"]) / 100\n            set_timestamp = now_timestamp - interval_time * weight_down_time\n        elif hunger > 0:\n            weight_up_config = get_pet_config.get_WeightUpMood()\n            for i in weight_up_config:\n                rate = i[\"rate\"]\n                range_min = i[\"range\"][0]\n                range_max = i[\"range\"][1]\n                if range_min <= mood <= range_max:\n                    except_data = current_weight + int(weight_up * ((100 + rate) / 100) * interval_time)\n                    logger.info(\"每单位时间加成百分点为{}\".format(rate))\n                    logger.info(\"每单位时间增加：{}点\".format(weight_up * ((100 + rate) / 100)))\n                    break\n            set_timestamp = now_timestamp - interval_time * weight_up_time\n        if except_data < 100:\n            except_data = 100\n        redis_db.set_weight_timestamp(account_id, int(set_timestamp))\n        redis_db.set_system_timestamp(account_id, int(set_timestamp))  # 系统时间也要一起修改\n        step_weight_data_value(hunger, mood, health, interval_time, except_data)\n        except_data = int(except_data)\n        result = update(token)\n        assert result.response.status_code == 200\n        if result.response.json().get(\"code\") == \"SUCCESS\":\n            items = result.response.json().get(\"data\").get(\"items\")\n            for i in items:\n                if i.get(\"item_id\") == 115:\n                    logger.info(\n                        \"weight ==>> 期望结果：{}， 实际结果：{}\".format(except_data, i.get(\"number\")))\n>                   assert i.get(\"number\") == except_data\nE                   assert 500 == 432\nE                     -500\nE                     +432\n\ntest_11_data.py:260: AssertionError"}, "description": "该用例是体重数值的测试", "steps": [{"name": "前置步骤 ==>> 设置数据", "status": "passed", "parameters": [{"name": "hunger", "value": "0"}, {"name": "mood", "value": "100"}, {"name": "health", "value": "100"}, {"name": "interval_time", "value": "540"}, {"name": "except_value", "value": "432.0"}], "start": 1668738921957, "stop": 1668738921958}], "attachments": [{"name": "log", "source": "e61a970a-4387-4c9b-a493-efcfcb79f5d4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c9e327d6-1e2c-4099-925c-34a0b05bd56f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d4605928-8be1-48a8-8b5d-baeb2658e54b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "hunger", "value": "0"}, {"name": "mood", "value": "100"}, {"name": "health", "value": "100"}, {"name": "interval_time", "value": "100"}], "start": 1668738921106, "stop": 1668738922158, "uuid": "d6026176-31a1-4487-b370-231d93378dce", "historyId": "9bd7b3b2400c587badf8eab1d1321356", "testCaseId": "030c364439785e89e30ecb04ffe00de9", "fullName": "testcases.pet_api_test.test_11_data.TestData#test_weight_data", "labels": [{"name": "feature", "value": "数值模块"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "severity", "value": "trivial"}, {"name": "story", "value": "用例--体重数值测试"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.pet_api_test"}, {"name": "suite", "value": "test_11_data"}, {"name": "subSuite", "value": "TestData"}, {"name": "host", "value": "cy"}, {"name": "thread", "value": "12768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.pet_api_test.test_11_data"}]}
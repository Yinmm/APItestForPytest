{"name": "test_data[100-0.1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 99 == 100\n  -99\n  +100", "trace": "self = <testcases.pet_api_test.test_11_data.TestData object at 0x0000016A546D2D00>\npet_login_hasrole_fixture = {'code': 'SUCCESS', 'data': {'role_created': True, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjgzOTMw...hOSIsImFpZCI6IjYzNjBiZjhlZjM2YzAxMzQ1NjRkYjM1YyIsImV4Y2x1c2l2ZSI6dHJ1ZX0.qn0vVPyJVNx8whUXMDNRZwgideWUoZL9qXLVhCEHUi8'}}\ninit_value = 100, interval_time = 0.1\n\n    @allure.story(\"用例--饥饿值数值测试\")\n    @allure.description(\"该用例是饥饿值数值测试的测试\")\n    @pytest.mark.single\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"init_value, interval_time\", pet_data[\"test_data\"])\n    def test_data(self, pet_login_hasrole_fixture, init_value, interval_time):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        pet_info = pet_login_hasrole_fixture\n        token = pet_info[\"data\"][\"token\"]\n        update(token)\n        gm = GM(token)\n        gm.gm_hunger(init_value)\n        gm.moditem_list()\n        now_timestamp = redis_db.get_hunger_timestamp(account_id)\n        except_data = init_value - int(interval_time*int(get_pet_config.get_HungerConfig()[\"reduce\"]))\n        if except_data < 0:\n            except_data = 0\n        set_timestamp = now_timestamp - interval_time*get_pet_config.get_HungerConfig()[\"time\"]\n        redis_db.set_hunger_timestamp(account_id, int(set_timestamp))\n        redis_db.set_system_timestamp(account_id, int(set_timestamp)) #系统时间也要一起修改\n        result = update(token)\n        assert result.response.status_code == 200\n        if result.response.json().get(\"code\") == \"SUCCESS\":\n            items = result.response.json().get(\"data\").get(\"items\")\n            for i in items:\n                if i.get(\"item_id\") == 102:\n                    logger.info(\n                        \"hunger ==>> 期望结果：{}， 实际结果：{}\".format(except_data, i.get(\"number\")))\n>                   assert i.get(\"number\") == except_data\nE                   assert 99 == 100\nE                     -99\nE                     +100\n\ntest_11_data.py:46: AssertionError"}, "description": "该用例是饥饿值数值测试的测试", "attachments": [{"name": "log", "source": "9f87edaa-c5de-4d55-a2d3-2fc8aaa5b8cd-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9b357e69-d83f-4ec2-a54b-6661da5415a9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5609fdbc-74ba-4c5d-abcf-29df68d66e25-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_value", "value": "100"}, {"name": "interval_time", "value": "0.1"}], "start": 1667788280674, "stop": 1667788281598, "uuid": "a2c98253-b04d-4358-b542-596b392ef12c", "historyId": "9cd8340a70ecf82eccc57b8700b0294a", "testCaseId": "afe0e7f8adfc1ab0bbdaca07fa8591e2", "fullName": "testcases.pet_api_test.test_11_data.TestData#test_data", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "severity", "value": "trivial"}, {"name": "story", "value": "用例--饥饿值数值测试"}, {"name": "feature", "value": "数值模块"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.pet_api_test"}, {"name": "suite", "value": "test_11_data"}, {"name": "subSuite", "value": "TestData"}, {"name": "host", "value": "cy"}, {"name": "thread", "value": "11924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.pet_api_test.test_11_data"}]}